name: GHA

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  frontend:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: |
          npm ci
          echo "$PWD/node_modules/.bin" >> "$GITHUB_PATH"
        working-directory: frontend

      - name: reviewdog-eslint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: frontend
          level: warning
          eslint_flags: 'src/'

      - name: enable problem matcher
        run: |
          echo "::add-matcher::.github/eslint-stylish.problem-matcher.json"

      - name: eslint
        run: |
          npm run lint
        working-directory: frontend

  backend:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7.x
          architecture: 'x64'

      - id: python-info
        name: Get Python information
        run: |
          import sys
          version = "{}.{}.{}".format(*sys.version_info)
          print("::set-output name=version::{}".format(version))
        shell: python

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv --upgrade-strategy=only-if-needed

      - id: cache-venv
        name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: backend/.venv
          key: backend-venv-${{ steps.python-info.outputs.version }}-${{ hashFiles(env.backend-project-file) }}

      - name: Install backend dependencies
        id: install-dep
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv --copies
          pipenv sync --dev
        working-directory: backend

      - name: Update env
        run: |
          source .venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> "$GITHUB_PATH"
        working-directory: backend

      - name: Reviewdog flake8
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: backend/src
          level: warning

      - name: Reviewdog mypy
        uses: tsuyoshicho/action-mypy@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: backend/src
          level: warning

      - uses: liskin/gh-problem-matcher-wrap@v1
        with:
          action: add
          linters: flake8, mypy

      - name: Lint
        shell: bash -x {0}
        run: |
          pipenv run flake8
          pipenv run mypy
        working-directory: backend

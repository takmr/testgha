name: GHA pwsh

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  gha-pwsh:
    continue-on-error: true

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Zero
      id: zero
      continue-on-error: true
      run: |
        $VERSION = '1.2.3'
        echo "::set-output name=version::$VERSION"
        $FILE1 = Get-ChildItem -File "foobar.txt"
        if ($FILE1 -eq $null) { Write-Error "File not found" }
        echo "::set-output name=f1name::$($FILE1.name)"
        echo "::set-output name=f1path::$($FILE1.fullname)"
        $FILE2 = Get-ChildItem -File "foo/bar*.txt"
        if ($FILE2 -eq $null) { Write-Error "File not found" }
        echo "::set-output name=f2name::$($FILE2.name)"
        echo "::set-output name=f2path::$($FILE2.fullname)"
      shell: pwsh

    - name: First
      id: first
      continue-on-error: true
      run: |
        $VERSION = '1.2.3'
        echo "::set-output name=version::$VERSION"
        $FILE1 = Get-ChildItem -File "foobar.txt"
        echo "::set-output name=f1name::$($FILE1.name)"
        echo "::set-output name=f1path::$($FILE1.fullname)"
        $FILE2 = Get-ChildItem -File "foo/bar*.txt"
        echo "::set-output name=f2name::$($FILE2.name)"
        echo "::set-output name=f2path::$($FILE2.fullname)"
      shell: pwsh

    - name: Second
      id: second
      continue-on-error: true
      run: |
        $ErrorView = 'NormalView'
        & {
          echo "Output:"
          echo $env:X_VERSION
          echo $env:X_F1NAME
          echo $env:X_F1PATH
          echo $env:X_F2NAME
          echo $env:X_F2PATH
        } | Write-Output
        & {
          echo "Warning:"
          echo $env:X_VERSION
          echo $env:X_F1NAME
          echo $env:X_F1PATH
          echo $env:X_F2NAME
          echo $env:X_F2PATH
        } | Write-Warning
        & {
          echo "Error:"
          echo $env:X_VERSION
          echo $env:X_F1NAME
          echo $env:X_F1PATH
          echo $env:X_F2NAME
          echo $env:X_F2PATH
        } | Write-Error
        echo "END"
      shell: pwsh
      env:
        X_VERSION: ${{ steps.first.outputs.version }}
        X_F1NAME: ${{ steps.first.outputs.f1name }}
        X_F1PATH: ${{ steps.first.outputs.f1path }}
        X_F2NAME: ${{ steps.first.outputs.f2name }}
        X_F2PATH: ${{ steps.first.outputs.f2path }}

  test:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: npm ci

      - name: reviewdog-eslint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: 'src/'

      - name: enable problem matcher
        run: |
          echo "::add-matcher::.github/eslint-stylish.problem-matcher.json"

      - name: eslint
        run: |
          eslint src/
